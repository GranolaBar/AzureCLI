/*
Deployment script for FabrikamFiber

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "FabrikamFiber"
:setvar DefaultFilePrefix "FabrikamFiber"
:setvar DefaultDataPath "D:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Customer_Address]...';


GO
ALTER TABLE [dbo].[Customer] DROP CONSTRAINT [FK_Customer_Address];


GO
PRINT N'Dropping [dbo].[FK_Employee_Address]...';


GO
ALTER TABLE [dbo].[Employee] DROP CONSTRAINT [FK_Employee_Address];


GO
PRINT N'Dropping [dbo].[FK_Phone_Customer]...';


GO
ALTER TABLE [dbo].[Phone] DROP CONSTRAINT [FK_Phone_Customer];


GO
PRINT N'Dropping [dbo].[FK_ServiceTicket_Customer]...';


GO
ALTER TABLE [dbo].[ServiceTicket] DROP CONSTRAINT [FK_ServiceTicket_Customer];


GO
PRINT N'Dropping [dbo].[FK_Phone_Employee]...';


GO
ALTER TABLE [dbo].[Phone] DROP CONSTRAINT [FK_Phone_Employee];


GO
PRINT N'Dropping [dbo].[FK_ScheduleItem_Employee]...';


GO
ALTER TABLE [dbo].[ScheduleItem] DROP CONSTRAINT [FK_ScheduleItem_Employee];


GO
PRINT N'Dropping [dbo].[FK_ServiceLogEntry_Employee]...';


GO
ALTER TABLE [dbo].[ServiceLogEntry] DROP CONSTRAINT [FK_ServiceLogEntry_Employee];


GO
PRINT N'Dropping [dbo].[FK_ServiceTicket_CBEmployee]...';


GO
ALTER TABLE [dbo].[ServiceTicket] DROP CONSTRAINT [FK_ServiceTicket_CBEmployee];


GO
PRINT N'Dropping [dbo].[FK_ServiceTicket_ATEmployee]...';


GO
ALTER TABLE [dbo].[ServiceTicket] DROP CONSTRAINT [FK_ServiceTicket_ATEmployee];


GO
PRINT N'Dropping [dbo].[FK_ScheduleItem_ServiceTicket]...';


GO
ALTER TABLE [dbo].[ScheduleItem] DROP CONSTRAINT [FK_ScheduleItem_ServiceTicket];


GO
PRINT N'Dropping [dbo].[FK_ServiceLogEntry_ServiceTicket]...';


GO
ALTER TABLE [dbo].[ServiceLogEntry] DROP CONSTRAINT [FK_ServiceLogEntry_ServiceTicket];


GO
PRINT N'Dropping [dbo].[FK_ServiceTicket_Status]...';


GO
ALTER TABLE [dbo].[ServiceTicket] DROP CONSTRAINT [FK_ServiceTicket_Status];


GO
PRINT N'Starting rebuilding table [dbo].[Address]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Address] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Street] NVARCHAR (50) NULL,
    [City]   NVARCHAR (50) NULL,
    [State]  NVARCHAR (50) NULL,
    [Zip]    NVARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Address])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Address] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Address] ([Id], [Street], [City], [State], [Zip])
        SELECT   [Id],
                 [Street],
                 [City],
                 [State],
                 [Zip]
        FROM     [dbo].[Address]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Address] OFF;
    END

DROP TABLE [dbo].[Address];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Address]', N'Address';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Alert]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Alert] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Created]     DATETIME       NOT NULL,
    [Description] NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Alert])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Alert] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Alert] ([Id], [Created], [Description])
        SELECT   [Id],
                 [Created],
                 [Description]
        FROM     [dbo].[Alert]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Alert] OFF;
    END

DROP TABLE [dbo].[Alert];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Alert]', N'Alert';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Customer]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Customer] (
    [Id]        INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (20) NOT NULL,
    [LastName]  NVARCHAR (20) NOT NULL,
    [AddressId] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Customer])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Customer] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Customer] ([Id], [FirstName], [LastName], [AddressId])
        SELECT   [Id],
                 [FirstName],
                 [LastName],
                 [AddressId]
        FROM     [dbo].[Customer]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Customer] OFF;
    END

DROP TABLE [dbo].[Customer];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Customer]', N'Customer';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Employee]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Employee] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]    NVARCHAR (20)  NOT NULL,
    [LastName]     NVARCHAR (20)  NOT NULL,
    [AddressId]    INT            NOT NULL,
    [Identity]     NVARCHAR (50)  NOT NULL,
    [ServiceAreas] NVARCHAR (150) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Employee])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Employee] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Employee] ([Id], [FirstName], [LastName], [AddressId], [Identity], [ServiceAreas])
        SELECT   [Id],
                 [FirstName],
                 [LastName],
                 [AddressId],
                 [Identity],
                 [ServiceAreas]
        FROM     [dbo].[Employee]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Employee] OFF;
    END

DROP TABLE [dbo].[Employee];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Employee]', N'Employee';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Message]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Message] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Sent]        DATETIME       NOT NULL,
    [Description] NVARCHAR (300) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Message])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Message] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Message] ([Id], [Sent], [Description])
        SELECT   [Id],
                 [Sent],
                 [Description]
        FROM     [dbo].[Message]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Message] OFF;
    END

DROP TABLE [dbo].[Message];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Message]', N'Message';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Phone]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Phone] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Label]      NVARCHAR (50) NULL,
    [Number]     NVARCHAR (20) NOT NULL,
    [CustomerId] INT           NULL,
    [EmployeeId] INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Phone])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Phone] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Phone] ([Id], [Label], [Number], [CustomerId], [EmployeeId])
        SELECT   [Id],
                 [Label],
                 [Number],
                 [CustomerId],
                 [EmployeeId]
        FROM     [dbo].[Phone]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Phone] OFF;
    END

DROP TABLE [dbo].[Phone];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Phone]', N'Phone';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleItem]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleItem] (
    [Id]              INT      IDENTITY (1, 1) NOT NULL,
    [EmployeeId]      INT      NULL,
    [ServiceTicketId] INT      NULL,
    [Start]           DATETIME NOT NULL,
    [WorkHours]       INT      NOT NULL,
    [AssignedOn]      DATETIME NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleItem])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleItem] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleItem] ([Id], [EmployeeId], [ServiceTicketId], [Start], [WorkHours], [AssignedOn])
        SELECT   [Id],
                 [EmployeeId],
                 [ServiceTicketId],
                 [Start],
                 [WorkHours],
                 [AssignedOn]
        FROM     [dbo].[ScheduleItem]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleItem] OFF;
    END

DROP TABLE [dbo].[ScheduleItem];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleItem]', N'ScheduleItem';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ServiceLogEntry]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ServiceLogEntry] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [CreatedAt]       DATETIME       NOT NULL,
    [Description]     NVARCHAR (300) NOT NULL,
    [CreatedById]     INT            NOT NULL,
    [ServiceTicketId] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ServiceLogEntry])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ServiceLogEntry] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ServiceLogEntry] ([Id], [CreatedAt], [Description], [CreatedById], [ServiceTicketId])
        SELECT   [Id],
                 [CreatedAt],
                 [Description],
                 [CreatedById],
                 [ServiceTicketId]
        FROM     [dbo].[ServiceLogEntry]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ServiceLogEntry] OFF;
    END

DROP TABLE [dbo].[ServiceLogEntry];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ServiceLogEntry]', N'ServiceLogEntry';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ServiceTicket]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ServiceTicket] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [Title]           NVARCHAR (50)  NOT NULL,
    [Description]     NVARCHAR (300) NOT NULL,
    [StatusId]        INT            NOT NULL,
    [StatusValue]     INT            NOT NULL,
    [EscalationLevel] INT            NOT NULL,
    [Opened]          DATETIME       NULL,
    [Closed]          DATETIME       NULL,
    [CustomerId]      INT            NULL,
    [CreatedById]     INT            NULL,
    [AssignedToId]    INT            NULL,
    [TimeOpen]        NVARCHAR (20)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ServiceTicket])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ServiceTicket] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ServiceTicket] ([Id], [Title], [Description], [StatusId], [StatusValue], [EscalationLevel], [Opened], [Closed], [CustomerId], [CreatedById], [AssignedToId], [TimeOpen])
        SELECT   [Id],
                 [Title],
                 [Description],
                 [StatusId],
                 [StatusValue],
                 [EscalationLevel],
                 [Opened],
                 [Closed],
                 [CustomerId],
                 [CreatedById],
                 [AssignedToId],
                 [TimeOpen]
        FROM     [dbo].[ServiceTicket]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ServiceTicket] OFF;
    END

DROP TABLE [dbo].[ServiceTicket];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ServiceTicket]', N'ServiceTicket';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Status]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Status] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Description] NVARCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Status])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Status] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Status] ([Id], [Description])
        SELECT   [Id],
                 [Description]
        FROM     [dbo].[Status]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Status] OFF;
    END

DROP TABLE [dbo].[Status];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Status]', N'Status';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Customer_Address]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD CONSTRAINT [FK_Customer_Address] FOREIGN KEY ([AddressId]) REFERENCES [dbo].[Address] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Employee_Address]...';


GO
ALTER TABLE [dbo].[Employee] WITH NOCHECK
    ADD CONSTRAINT [FK_Employee_Address] FOREIGN KEY ([AddressId]) REFERENCES [dbo].[Address] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Phone_Customer]...';


GO
ALTER TABLE [dbo].[Phone] WITH NOCHECK
    ADD CONSTRAINT [FK_Phone_Customer] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceTicket_Customer]...';


GO
ALTER TABLE [dbo].[ServiceTicket] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceTicket_Customer] FOREIGN KEY ([CustomerId]) REFERENCES [dbo].[Customer] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Phone_Employee]...';


GO
ALTER TABLE [dbo].[Phone] WITH NOCHECK
    ADD CONSTRAINT [FK_Phone_Employee] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ScheduleItem_Employee]...';


GO
ALTER TABLE [dbo].[ScheduleItem] WITH NOCHECK
    ADD CONSTRAINT [FK_ScheduleItem_Employee] FOREIGN KEY ([EmployeeId]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceLogEntry_Employee]...';


GO
ALTER TABLE [dbo].[ServiceLogEntry] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceLogEntry_Employee] FOREIGN KEY ([CreatedById]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceTicket_CBEmployee]...';


GO
ALTER TABLE [dbo].[ServiceTicket] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceTicket_CBEmployee] FOREIGN KEY ([CreatedById]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceTicket_ATEmployee]...';


GO
ALTER TABLE [dbo].[ServiceTicket] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceTicket_ATEmployee] FOREIGN KEY ([AssignedToId]) REFERENCES [dbo].[Employee] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ScheduleItem_ServiceTicket]...';


GO
ALTER TABLE [dbo].[ScheduleItem] WITH NOCHECK
    ADD CONSTRAINT [FK_ScheduleItem_ServiceTicket] FOREIGN KEY ([ServiceTicketId]) REFERENCES [dbo].[ServiceTicket] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceLogEntry_ServiceTicket]...';


GO
ALTER TABLE [dbo].[ServiceLogEntry] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceLogEntry_ServiceTicket] FOREIGN KEY ([ServiceTicketId]) REFERENCES [dbo].[ServiceTicket] ([Id]);


GO
PRINT N'Creating [dbo].[FK_ServiceTicket_Status]...';


GO
ALTER TABLE [dbo].[ServiceTicket] WITH NOCHECK
    ADD CONSTRAINT [FK_ServiceTicket_Status] FOREIGN KEY ([StatusId]) REFERENCES [dbo].[Status] ([Id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Customer] WITH CHECK CHECK CONSTRAINT [FK_Customer_Address];

ALTER TABLE [dbo].[Employee] WITH CHECK CHECK CONSTRAINT [FK_Employee_Address];

ALTER TABLE [dbo].[Phone] WITH CHECK CHECK CONSTRAINT [FK_Phone_Customer];

ALTER TABLE [dbo].[ServiceTicket] WITH CHECK CHECK CONSTRAINT [FK_ServiceTicket_Customer];

ALTER TABLE [dbo].[Phone] WITH CHECK CHECK CONSTRAINT [FK_Phone_Employee];

ALTER TABLE [dbo].[ScheduleItem] WITH CHECK CHECK CONSTRAINT [FK_ScheduleItem_Employee];

ALTER TABLE [dbo].[ServiceLogEntry] WITH CHECK CHECK CONSTRAINT [FK_ServiceLogEntry_Employee];

ALTER TABLE [dbo].[ServiceTicket] WITH CHECK CHECK CONSTRAINT [FK_ServiceTicket_CBEmployee];

ALTER TABLE [dbo].[ServiceTicket] WITH CHECK CHECK CONSTRAINT [FK_ServiceTicket_ATEmployee];

ALTER TABLE [dbo].[ScheduleItem] WITH CHECK CHECK CONSTRAINT [FK_ScheduleItem_ServiceTicket];

ALTER TABLE [dbo].[ServiceLogEntry] WITH CHECK CHECK CONSTRAINT [FK_ServiceLogEntry_ServiceTicket];

ALTER TABLE [dbo].[ServiceTicket] WITH CHECK CHECK CONSTRAINT [FK_ServiceTicket_Status];


GO
PRINT N'Update complete.';


GO
