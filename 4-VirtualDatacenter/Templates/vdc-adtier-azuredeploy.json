{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    
    "parameters": {
        "commonSettings":           { "type": "object",                     "metadata": { "description": "Common API values"                      } },
        "virtualNetworkParameters": { "type": "object",                     "metadata": { "description": "Common VNET values"                     } },
           "availabilitySetName":   { "type": "string",                     "metadata": { "description": "Name of the Availability Set"           } },
                 "InstanceCount":   { "type": "int",    "defaultValue": 1,  "metadata": { "description": "Number of instances to create"          } },
        "diagStorageAccountName":   { "type": "string",                     "metadata": { "description": "Name of Storage Account for diagnostics"} },
        "diskStorageAccountRoot":   { "type": "string",                     "metadata": { "description": "Name of Storage Account for vhds"       } },
                        "vmName":   { "type": "string",                     "metadata": { "description": "RootName of the VM's"                   } }
    },

	"variables": {
		 "vm1Name": "[concat(parameters( 'vmName'),0)                ]",
		 "vm2Name": "[concat(parameters( 'vmName'),1)                ]",
//		"nic1Name": "[concat( variables('vm1Name'),'-nic')           ]",
//		"nic2Name": "[concat( variables('vm2Name'),'-nic')           ]",
		 "sa1Name": "[concat(parameters('diskStorageAccountRoot'),0) ]",
		 "sa2Name": "[concat(parameters('diskStorageAccountRoot'),1) ]",
		"AzureDNS": "168.63.129.16"
	},

	"resources": [

		{
			"name": "AS",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/availability-set.json')]" },

				"parameters": {
					"commonSettings":      { "value": "[parameters('commonSettings')]"      },
					"availabilitySetName": { "value": "[parameters('availabilitySetName')]" }
				}
			}
		},



		{
			"name": "ADsa1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/storage-account.json')]" },

				"parameters": {
					"commonSettings":     { "value": "[parameters('commonSettings') ]" },
					"storageAccountName": { "value": "[ variables('sa1Name')        ]" }
				}
			}
		},



		{
			"name": "ADsa2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/storage-account.json')]" },

				"parameters": {
					"commonSettings":     { "value": "[parameters('commonSettings')   ]" },
					"storageAccountName": { "value": "[ variables('sa2Name')          ]" }
				}
			}
		},



		{
			"name": "[concat(parameters('vmName'),0,'-dynamicnic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",

			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": { "id": "[  concat(resourceId('Microsoft.Network/virtualNetworks',  parameters('virtualNetworkParameters').virtualNetworkName),'/subnets/',parameters('virtualNetworkParameters').adSubnetName)]" }
						}
					}
				],
				"dnsSettings": { "dnsServers": [ "[variables('AzureDNS')]" ] } //Force AzureDNS, otherwise its wonky
			}
		},



		{
			"name": "[concat(parameters('vmName'),0,'-staticnic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",

			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress":          "10.0.9.200",
							"subnet": { "id": "[  concat(resourceId('Microsoft.Network/virtualNetworks',  parameters('virtualNetworkParameters').virtualNetworkName),'/subnets/',parameters('virtualNetworkParameters').adSubnetName)]" }
						}
					}
				],
				"dnsSettings": { "dnsServers": [ "10.0.9.200" ] }
			}
		},


		{
			"name": "[concat(parameters('vmName'),1,'-staticnic0')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",

			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress":          "10.0.9.201",
							"subnet": { "id": "[  concat(resourceId('Microsoft.Network/virtualNetworks',  parameters('virtualNetworkParameters').virtualNetworkName),'/subnets/',parameters('virtualNetworkParameters').adSubnetName)]" }
						}
					}
				],
				"dnsSettings": { "dnsServers": [ "10.0.9.200" ] }
			}
		},


		{
			"name": "[concat(parameters('vmName'),1,'-staticnic1')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "2016-03-30",

			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Static",
							"privateIPAddress":          "10.0.9.202",
							"subnet": { "id": "[  concat(resourceId('Microsoft.Network/virtualNetworks',  parameters('virtualNetworkParameters').virtualNetworkName),'/subnets/',parameters('virtualNetworkParameters').adSubnetName)]" }
						}
					}
				],
				"dnsSettings": { "dnsServers": [ "10.0.9.200" ] }
			}
		},



		{
			"name": "ADvm1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"dependsOn": [
				"Microsoft.Resources/deployments/AS",
				"[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'),0,'-dynamicnic')]",
				"[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'),0, '-staticnic')]",
				"Microsoft.Resources/deployments/ADsa1"
			],

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/vm-via-dualnic-with-availability-set.json')]" },

				"parameters": {
					"commonSettings":         { "value": "[       parameters('commonSettings')          ]" },
					"vmName":                 { "value": "[        variables('vm1Name')                 ]" },
					"diskStorageAccountName": { "value": "[        variables('sa1Name')                 ]" },
					"diagStorageAccountName": { "value": "[       parameters('diagStorageAccountName')  ]" },
					"nic1Name":               { "value": "[concat(parameters('vmName'),0,'-dynamicnic') ]" },  //first DC gets DYNAMIC first
					"nic2Name":               { "value": "[concat(parameters('vmName'),0, '-staticnic') ]" },
					"availabilitySetName":    { "value": "[       parameters('availabilitySetName')     ]" }
				}
			}
		},



		{
			"name": "AD1",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"dependsOn": [ "Microsoft.Resources/deployments/ADvm1" ],

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/applyDSC',parameters('commonSettings').deploySwitch,'.json')]" },

				"parameters": {
					"commonSettings": { "value": "[parameters('commonSettings') ]" },
					"vmName":         { "value": "[ variables('vm1Name')        ]" },
					"scriptName":     { "value": "AD-First.ps1"                    },
					"configName":     { "value": "DemoAD1"                         }
				}
			}
		},



		{
			"name": "ADvm2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"dependsOn": [
				"Microsoft.Resources/deployments/AS",
				"[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'),1,'-staticnic0')]",
				"[concat('Microsoft.Network/networkInterfaces/', parameters('vmName'),1,'-staticnic1')]",
				"Microsoft.Resources/deployments/ADsa2"
			],

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/vm-via-dualnic-with-availability-set.json')]" },

				"parameters": {
					"commonSettings":         { "value": "[parameters('commonSettings')                 ]" },
					"vmName":                 { "value": "[ variables('vm2Name')                        ]" },
					"diskStorageAccountName": { "value": "[ variables('sa2Name')                        ]" },
					"diagStorageAccountName": { "value": "[parameters('diagStorageAccountName')         ]" },
					"nic2Name":               { "value": "[concat(parameters('vmName'),1,'-staticnic0') ]" },  //second DC gets STATIC first
					"nic1Name":               { "value": "[concat(parameters('vmName'),1,'-staticnic1') ]" },
					"availabilitySetName":    { "value": "[parameters('availabilitySetName')            ]" }
				}
			}
		},



		{
			"name": "AD2",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[parameters('commonSettings').resourceApiVersion]",

			"dependsOn": [ "Microsoft.Resources/deployments/ADvm2", "Microsoft.Resources/deployments/AD1" ],

			"properties": {
				"mode": "incremental",
				"templateLink": { "uri": "[concat(parameters('commonSettings').commonLocation,'/applyDSC',parameters('commonSettings').deploySwitch,'.json')]" },

				"parameters": {
					"commonSettings": { "value": "[parameters('commonSettings') ]" },
					"vmName":         { "value": "[ variables('vm2Name')        ]" },
					"scriptName":     { "value": "AD-Others.ps1" },
					"configName":     { "value": "DemoAD2" }
				}
			}
		}


	]
}
